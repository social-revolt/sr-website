{"version":3,"sources":["webpack:///./node_modules/react-id-swiper/lib/index.js","webpack:///./node_modules/react-id-swiper/lib/ReactIdSwiper.js","webpack:///./node_modules/react-id-swiper/lib/utils.js","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.js"],"names":["__importDefault","this","mod","__esModule","default","Object","defineProperty","exports","value","ReactIdSwiper_1","__webpack_require__","__assign","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__importStar","result","k","react_1","swiper_esm_1","object_assign_1","utils_1","ReactIdSwiper","props","swiperRef","createRef","swiper","activeSlideKey","ContainerEl","children","containerClass","getSwiper","navigation","noSwiping","pagination","parallax","parallaxEl","WrapperEl","wrapperClass","rebuildOnUpdate","renderScrollbar","renderPagination","renderPrevButton","renderNextButton","renderParallax","rtl","scrollbar","shouldSwiperUpdate","slideClass","loop","_a","modules","Swiper","use","validateChildren","console","warn","getActiveSlideIndexFromProps","activeSlideId","id","Children","forEach","child","isValidElement","key","getSwiperInstance","swiperInstance","buildSwiper","current","destroySwiper","destroy","useEffect","slideToIndex","slideTo","update","numSlides","slides","activeIndex","index","Math","max","shouldRenderParallax","isModuleAvailable","shouldRenderPagination","el","shouldRenderScrollbar","isNavigationModuleAvailable","shouldRenderNextButton","nextEl","shouldRenderPrevButton","prevEl","createElement","className","dir","ref","map","e","isReactElement","slideClassNames","push","cloneElement","join","trim","defaultProps","classNames","data-swiper-parallax","split","HTMLElement","isValid","Array","isArray","element","type","moduleName","moduleAvailable","name","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","$","selector","context","els","tempParent","html","indexOf","toCreate","innerHTML","match","nodeType","unique","uniqueArray","fn","Class","d","__webpack_exports__","swiper_esm_Swiper","virtual","keyboard","mousewheel","swiper_esm_scrollbar","swiper_esm_zoom","lazy","controller","a11y$1","swiper_esm_history","hashNavigation","autoplay","effectFade","effectCube","effectFlip","effectCoverflow","thumbs","Methods","addClass","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","getAttribute","attrName","removeAttr","removeAttribute","data","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","target","eventData","dom7EventData","unshift","is","parents","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","toAdd","keys","methodName","Utils","obj","object","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","a","replace","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","extend","swiper_esm_Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","observer","passiveListener","supportsPassive","opts","gestures","swiper_esm_Browser","isIE","isEdge","isSafari","ua","toLowerCase","isUiWebView","test","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","f7proxy","eventHandler","slice","instanceParams","instance","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","proto","static","install","m","installModule","updateSize","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","wrongRTL","isVirtual","enabled","previousSlidesLength","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","floor","ceil","slidesPerView","slidesPerColumnFill","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","swiper_esm_transition","transitionStart","runCallbacks","direction","autoHeight","animating","swiper_esm_slide","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","defaults","init","touchEventsTarget","edgeSwipeDetection","edgeSwipeThreshold","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","breakpointsInverse","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","threshold","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","runCallbacksOnInit","prototypes","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","which","button","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","onTouchMove","preventedByNestedSwiper","diffX","diffY","sqrt","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","once","stopIndex","groupSize","ratio","onClick","stopImmediatePropagation","start","passive","move","end","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","sort","b","innerWidth","wasLocked","addClasses","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","enable","disable","Mousewheel","lastScrollTime","isSupported","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","onNextClick","onPrevClick","hideOnClick","hiddenClass","isHidden","Pagination","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","number","render","Scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","currentOpacity","currentScale","setTransform","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","get","onTransitionEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","loadOnTransitionStart","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","notificationClass","updateNavigation","updatePagination","History","pushState","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","setHistory","HashNavigation","newHash","watchState","onHashCange","setHash","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","disableOnInteraction","pause","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","Thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass"],"mappings":"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","file":"7-903ffae7bac820bc4541.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ReactIdSwiper_1 = __importDefault(require(\"./ReactIdSwiper\"));\n// React-id-swiper\nexports.default = ReactIdSwiper_1.default;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importStar(require(\"react\"));\nvar swiper_esm_1 = require(\"swiper/dist/js/swiper.esm\");\nvar object_assign_1 = __importDefault(require(\"object-assign\"));\nvar utils_1 = require(\"./utils\");\nvar ReactIdSwiper = function (props) {\n    var swiperRef = react_1.createRef();\n    var swiper = null;\n    var activeSlideKey = props.activeSlideKey, ContainerEl = props.ContainerEl, children = props.children, containerClass = props.containerClass, getSwiper = props.getSwiper, navigation = props.navigation, noSwiping = props.noSwiping, pagination = props.pagination, parallax = props.parallax, parallaxEl = props.parallaxEl, WrapperEl = props.WrapperEl, wrapperClass = props.wrapperClass, rebuildOnUpdate = props.rebuildOnUpdate, renderScrollbar = props.renderScrollbar, renderPagination = props.renderPagination, renderPrevButton = props.renderPrevButton, renderNextButton = props.renderNextButton, renderParallax = props.renderParallax, rtl = props.rtl, scrollbar = props.scrollbar, shouldSwiperUpdate = props.shouldSwiperUpdate, slideClass = props.slideClass, loop = props.loop, _a = props.modules, modules = _a === void 0 ? [] : _a;\n    // Initialize modules to use with swiper;\n    swiper_esm_1.Swiper.use(modules);\n    // No render if wrapper elements are not provided or when modules is empty\n    if (!children || !ContainerEl || !WrapperEl) {\n        return null;\n    }\n    // Validate children props\n    if (!utils_1.validateChildren(children)) {\n        console.warn('Children should be react element or an array of react element!!');\n        return null;\n    }\n    // Get current active slide key\n    var getActiveSlideIndexFromProps = function () {\n        if (!activeSlideKey) {\n            return null;\n        }\n        var activeSlideId = 0;\n        // In loop mode first slide index should be 1\n        var id = loop ? 1 : 0;\n        react_1.Children.forEach(children, function (child) {\n            if (react_1.isValidElement(child)) {\n                if (child.key === activeSlideKey) {\n                    activeSlideId = id;\n                }\n                id += 1;\n            }\n        });\n        return activeSlideId;\n    };\n    // Get swiper instance\n    var getSwiperInstance = function (swiperInstance) {\n        if (typeof getSwiper === 'function') {\n            getSwiper(swiperInstance);\n        }\n    };\n    // Initialize swiper\n    var buildSwiper = function () {\n        if (swiperRef.current && swiper === null) {\n            swiper = new swiper_esm_1.Swiper(swiperRef.current, object_assign_1.default({}, props));\n            getSwiperInstance(swiper);\n        }\n    };\n    // Destroy swiper\n    var destroySwiper = function () {\n        if (swiper !== null) {\n            swiper.destroy(true, true);\n            swiper = null;\n            getSwiperInstance(swiper);\n        }\n    };\n    // Rebuild swiper\n    var rebuildSwiper = function () {\n        destroySwiper();\n        buildSwiper();\n    };\n    // Update swiper\n    var updateSwiper = function () {\n        if (swiper !== null) {\n            swiper.update();\n            getSwiperInstance(swiper);\n        }\n    };\n    // Render slides\n    var renderContent = function (e) {\n        if (!utils_1.isReactElement(e)) {\n            return null;\n        }\n        var slideClassNames = [slideClass, e.props.className];\n        if (noSwiping) {\n            slideClassNames.push('swiper-no-swiping');\n        }\n        return react_1.cloneElement(e, __assign({}, e.props, { className: slideClassNames.join(' ').trim() }));\n    };\n    // Only execute when component is mounted or unmounted\n    react_1.useEffect(function () {\n        buildSwiper();\n        var slideToIndex = getActiveSlideIndexFromProps();\n        if (swiper !== null && slideToIndex !== null) {\n            swiper.slideTo(slideToIndex);\n        }\n        return function () { return destroySwiper(); };\n    }, []);\n    // Execute each time when props are updated\n    react_1.useEffect(function () {\n        if (swiper !== null) {\n            if (rebuildOnUpdate) {\n                rebuildSwiper();\n            }\n            else if (shouldSwiperUpdate) {\n                updateSwiper();\n                var numSlides = swiper.slides.length;\n                if (numSlides <= swiper.activeIndex) {\n                    var index = Math.max(numSlides - 1, 0);\n                    swiper.slideTo(index);\n                }\n            }\n            var slideToIndex = getActiveSlideIndexFromProps();\n            if (slideToIndex !== null) {\n                swiper.slideTo(slideToIndex);\n            }\n        }\n    });\n    // Check modules are loaded before rendering contents\n    var shouldRenderParallax = utils_1.isModuleAvailable(modules, 'parallax') && parallax && parallaxEl;\n    var shouldRenderPagination = utils_1.isModuleAvailable(modules, 'pagination') && pagination && pagination.el;\n    var shouldRenderScrollbar = utils_1.isModuleAvailable(modules, 'scrollbar') && scrollbar && scrollbar.el;\n    var isNavigationModuleAvailable = utils_1.isModuleAvailable(modules, 'navigation');\n    var shouldRenderNextButton = isNavigationModuleAvailable && navigation && navigation.nextEl;\n    var shouldRenderPrevButton = isNavigationModuleAvailable && navigation && navigation.prevEl;\n    return (react_1.default.createElement(ContainerEl, { className: containerClass, dir: rtl && 'rtl', ref: swiperRef },\n        shouldRenderParallax && renderParallax && renderParallax(props),\n        react_1.default.createElement(WrapperEl, { className: wrapperClass }, react_1.Children.map(children, renderContent)),\n        shouldRenderPagination && renderPagination && renderPagination(props),\n        shouldRenderScrollbar && renderScrollbar && renderScrollbar(props),\n        shouldRenderNextButton && renderNextButton && renderNextButton(props),\n        shouldRenderPrevButton && renderPrevButton && renderPrevButton(props)));\n};\n// Default props\nReactIdSwiper.defaultProps = {\n    containerClass: 'swiper-container',\n    wrapperClass: 'swiper-wrapper',\n    slideClass: 'swiper-slide',\n    ContainerEl: 'div',\n    WrapperEl: 'div',\n    renderScrollbar: function (_a) {\n        var scrollbar = _a.scrollbar;\n        return scrollbar ? react_1.default.createElement(\"div\", { className: utils_1.classNames(scrollbar.el) }) : null;\n    },\n    renderPagination: function (_a) {\n        var pagination = _a.pagination;\n        return pagination ? react_1.default.createElement(\"div\", { className: utils_1.classNames(pagination.el) }) : null;\n    },\n    renderPrevButton: function (_a) {\n        var navigation = _a.navigation;\n        return navigation ? react_1.default.createElement(\"div\", { className: utils_1.classNames(navigation.prevEl) }) : null;\n    },\n    renderNextButton: function (_a) {\n        var navigation = _a.navigation;\n        return navigation ? react_1.default.createElement(\"div\", { className: utils_1.classNames(navigation.nextEl) }) : null;\n    },\n    renderParallax: function (_a) {\n        var parallaxEl = _a.parallaxEl;\n        return parallaxEl ? (react_1.default.createElement(\"div\", { className: utils_1.classNames(parallaxEl.el), \"data-swiper-parallax\": parallaxEl.value })) : null;\n    },\n    modules: []\n};\nexports.default = ReactIdSwiper;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nexports.classNames = function (el) {\n    if (typeof el === 'string') {\n        return el\n            .split('.')\n            .join(' ')\n            .trim();\n    }\n    else if (el instanceof HTMLElement) {\n        return el.className;\n    }\n    return '';\n};\nexports.validateChildren = function (children) {\n    var isValid = true;\n    if (Array.isArray(children)) {\n        react_1.Children.forEach(children, function (child) {\n            if (!react_1.isValidElement(child)) {\n                isValid = false;\n            }\n        });\n    }\n    else {\n        isValid = react_1.isValidElement(children);\n    }\n    return isValid;\n};\nexports.isReactElement = function (element) {\n    return react_1.isValidElement(element) &&\n        (typeof element.type === 'string' ||\n            typeof element.type === 'function' ||\n            typeof element.type === 'object');\n};\nexports.isModuleAvailable = function (modules, moduleName) {\n    var moduleAvailable = false;\n    for (var i = 0; i < modules.length; i++) {\n        if (modules[i].name === moduleName) {\n            moduleAvailable = true;\n            break;\n        }\n    }\n    return moduleAvailable;\n};\n","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    if (currentDirection === 'vertical') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}vertical wp8-vertical`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n    if (currentDirection === 'horizontal') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}horizontal wp8-horizontal`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar virtual = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar keyboard = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar mousewheel = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar navigation = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar pagination = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar scrollbar = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar parallax = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar zoom = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar lazy = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar controller = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar a11y$1 = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar history = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar hashNavigation = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar autoplay = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar effectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar effectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar effectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar effectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar thumbs = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  \n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport { Swiper, virtual as Virtual, keyboard as Keyboard, mousewheel as Mousewheel, navigation as Navigation, pagination as Pagination, scrollbar as Scrollbar, parallax as Parallax, zoom as Zoom, lazy as Lazy, controller as Controller, a11y$1 as A11y, history as History, hashNavigation as HashNavigation, autoplay as Autoplay, effectFade as EffectFade, effectCube as EffectCube, effectFlip as EffectFlip, effectCoverflow as EffectCoverflow, thumbs as Thumbs };\n"],"sourceRoot":""}